#!/usr/bin/env groovy
pipeline {
    agent any
    environment {
        PATH = "/usr/local/git/bin:/usr/local/bin/:$PATH"
        DOCKER_REGISTRY_HOST = "nexus.jwsmed.com:5000/repository/jarvis-docker"
        SERVICE_MODULE_DIR = "user-service"
        TASK_MODULE_DIR = "user-task"
        SPRING_PROFILES_ACTIVE = "prod"
    }
    tools {
        maven 'maven'
    }
    stages {
        stage('Initialize') {
            steps {
                script {
                    env.BUILD_PACKAGE_VERSION = params.PACKAGE_VERSION
                }
                dir("${SERVICE_MODULE_DIR}") {
                    script {
                        def pom = readMavenPom file: 'pom.xml'
                        env.DOCKER_SERVICE_NAME = pom.artifactId
                        env.DOCKER_SERVICE_IMAGE_TAG = "${env.DOCKER_REGISTRY_HOST}/${env.DOCKER_SERVICE_NAME}:${env.BUILD_PACKAGE_VERSION}"
                    }
                }
                dir("${TASK_MODULE_DIR}") {
                    script {
                        def pom = readMavenPom file: 'pom.xml'
                        env.DOCKER_TASK_NAME = pom.artifactId
                        env.DOCKER_TASK_IMAGE_TAG = "${env.DOCKER_REGISTRY_HOST}/${env.DOCKER_TASK_NAME}:${env.BUILD_PACKAGE_VERSION}"
                    }
                }
                echo "Build version: ${env.BUILD_PACKAGE_VERSION}"
            }
        }
        stage('Deploy service to production') {
            steps {
                sh "docker-compose -H java-prod-01:2375 stop user-service"
                sh "docker-compose -H java-prod-01:2375 rm -f user-service"
                sh "docker-compose -H java-prod-01:2375 pull user-service"
                sh "docker-compose -H java-prod-01:2375 up -d user-service"
                sleep 180
                sh "docker-compose -H java-prod-02:2375 stop user-service"
                sh "docker-compose -H java-prod-02:2375 rm -f user-service"
                sh "docker-compose -H java-prod-02:2375 pull user-service"
                sh "docker-compose -H java-prod-02:2375 up -d user-service"
            }
        }
        stage('Deploy task to production') {
            steps {
                sh "docker-compose -H java-prod-02:2375 stop user-task"
                sh "docker-compose -H java-prod-02:2375 rm -f user-task"
                sh "docker-compose -H java-prod-02:2375 pull user-task"
                sh "docker-compose -H java-prod-02:2375 up -d user-task"
            }
        }
        stage('Clean docker unused images') {
            steps {
                sh "docker -H java-prod-01:2375 image prune -f"
                sh "docker -H java-prod-02:2375 image prune -f"
            }
        }
    }
}